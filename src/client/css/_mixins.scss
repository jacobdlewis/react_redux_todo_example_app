/*
 * Get z-index from map based on a named key
 */
@function z($layer) {
  @return map-get($z-layers, $layer);
}

/*
 * Hide visually and from screen readers
 */

@mixin hidden() {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

@mixin visuallyHidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

@mixin visuallyHiddenFocusable() {
  &:active,
  &:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

@mixin invisible() {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

@mixin clearfix() {
  &::before,
  &::after {
    content: " "; /* 1 */
    display: table; /* 2 */
  }

  &::after {
    clear: both;
  }
}

/*
 * Position something vertically/horizontally/both centered in a container
 */

@mixin positionally-align($translate: Y, $position: absolute) {
  position: $position;

  @if $translate == X {
    left: 50%;
    transform: translateX(-50%);
  }

  @else if $translate == Y {
    top: 50%;
    transform: translateY(-50%);
  }

  @else {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

/*
 * Quickly set link colors
 */

@mixin links ($link, $visited, $hover, $active) {
  & {
    color: $link;

    &:visited {
      color: $visited;
    }

    &:hover {
      color: $hover;
    }

    &:active,
    &:focus {
      color: $active;
    }
  }
}

/*
 * Easily apply a disabled state to anything
 */

@mixin disabled() {
  cursor: default;
  opacity: 0.25;
  pointer-events: none;
}
